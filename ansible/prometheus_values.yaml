
alertmanager:
  alertmanagerSpec:
    replicas: 2
    tolerations:
    - key: "node-role.kubernetes.io/infra"
      operator: "Exists"
      value: "infratown"
    podAntiAffinityTopologyKey: node-role.kubernetes.io/infra
    podAntiAffinity: "hard"
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: node-role.kubernetes.io/infra
              operator: In
              values:
{% for i in range(infrastructure_nodes|length) %}
              - "{{ i+1 }}"
{% endfor %}
  podDisruptionBudget:
    enabled: true
    minAvailable: 1


grafana:
  adminPassword: admin
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node-role.kubernetes.io/infra
            operator: In
            values:
{% for i in range(infrastructure_nodes|length) %}
            - "{{ i+1 }}"
{% endfor %}
  tolerations:
  - key: "node-role.kubernetes.io/infra"
    operator: "Exists"
    effect: "NoSchedule"

kube-state-metrics:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node-role.kubernetes.io/infra
            operator: In
            values:
{% for i in range(infrastructure_nodes|length) %}
            - "{{ i+1 }}"
{% endfor %}
  tolerations:
  - key: "node-role.kubernetes.io/infra"
    operator: "Exists"
    effect: "NoSchedule"

prometheus:
  prometheusSpec:
    externalUrl: /prometheus/
    replicas: 2
    tolerations:
    - key: "node-role.kubernetes.io/infra"
      operator: "Exists"
      effect: "NoSchedule"
    podAntiAffinityTopologyKey: node-role.kubernetes.io/infra
    podAntiAffinity: "hard"
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: node-role.kubernetes.io/infra
              operator: In
              values:
{% for i in range(infrastructure_nodes|length) %}
              - "{{ i+1 }}"
{% endfor %}
  podDisruptionBudget:
    enabled: true
    minAvailable: 1

