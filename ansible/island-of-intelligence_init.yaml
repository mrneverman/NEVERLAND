- name: Island of intelligence initialization  
  hosts: islandOfIntelligence
  gather_facts: no
  become: yes
  become_method: sudo
  become_user: root
  vars_files:
  - ./terraform_variables/tf_island-of-intelligence_vars_file.yml
  - ./terraform_variables/tf_network_vars_file.yml
  - ./terraform_variables/tf_k8node_vars_file.yml
  tasks:
  - name: Wait 300 seconds for ssh timeout, but only start checking after 1 seconds
    wait_for_connection:
      delay: 1
      timeout: 300

  - name: install tinyproxy
    apt:
      name:
      - tinyproxy
      update_cache: true
      state: present

  - name: Ensure the tinyproxy  port is {{ tinyproxy_port }}
    lineinfile:
      path: /etc/tinyproxy/tinyproxy.conf
      regexp: '^Port 8888'
      line: Port {{ tinyproxy_port }}

  - name: Ensure the tinyproxy  listens {{ ioi_internal_ip }}
    lineinfile:
      path: /etc/tinyproxy/tinyproxy.conf
      regexp: '^#Listen 192.168.0.1'
      line: Listen {{ ioi_internal_ip }}

  - name: Allow {{ vpc_cidr }} to access http proxy
    lineinfile:
      path: /etc/tinyproxy/tinyproxy.conf
      regexp: '^Allow 127.0.0.1'
      line: Allow {{ vpc_cidr }}

  - name: add iptable entry for tinyproxy
    iptables:
      chain: INPUT
      protocol: tcp
      destination_port: "{{ tinyproxy_port }}"
      source: "{{ vpc_cidr }}"
      jump: ACCEPT
      comment: tinyproxy

  - name: enable and restart tinyproxy
    service:
      name: tinyproxy
      state: restarted
      enabled: yes

  - name: Create NEVERLAND certificates
    shell: |
           openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -subj '/O=NEVERLAND/CN=neverland.com' -keyout ../sensitive_data/ca.key -out ../sensitive_data/ca.crt
           openssl req -out ../sensitive_data/neverland.com.csr -newkey rsa:2048 -nodes -keyout ../sensitive_data/neverland.com.key -subj "/CN=neverland.com/O=NEVERLAND"
           openssl x509 -req -sha256 -days 365 -CA ../sensitive_data/ca.crt -CAkey ../sensitive_data/ca.key -set_serial 0 -in ../sensitive_data/neverland.com.csr -out ../sensitive_data/neverland.com.crt
           cat ../sensitive_data/neverland.com.key ../sensitive_data/neverland.com.crt >> ../sensitive_data/neverland.com.pem
    delegate_to: localhost

  - name: install haproxy
    apt:
      name:
      - haproxy
      update_cache: true
      state: present 

  - name: Add conf for haproxy
    blockinfile:
      path: "/etc/haproxy/haproxy.cfg"
      block: |
              frontend localhost
                  bind *:80
                  bind *:443 ssl crt  /etc/haproxy/neverland.com.pem
                  option tcplog
                  mode http
                  default_backend nodes

              backend nodes
                  mode http
                  http-request redirect scheme https unless { ssl_fc }


  - name: Add conf for haproxy
    blockinfile:
      path: "/etc/haproxy/haproxy.cfg"
      block: |
              server node{{ ansible_loop.index }}  {{ item }}:{{ istioingressgateway_port }} check check-sni neverland.com sni str(neverland.com) ssl verify none
      marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item }}"
    loop: "{{ worktowns_internal_ip }}"
    loop_control:
      extended: yes

  - name: Copy certificate authority certificate
    copy:
      src: ../sensitive_data/neverland.com.pem
      dest: /etc/haproxy/neverland.com.pem
      mode: 0500

  - name: enable and restart haproxy
    service:
      name: haproxy
      state: restarted
      enabled: yes


