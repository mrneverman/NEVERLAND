- name: istioctl installation
  hosts: portOfNeverland
  gather_facts: no
  become: yes
  become_method: sudo
  become_user: root
  vars_files:
  - ./terraform_variables/tf_island-of-intelligence_vars_file.yml
  - ./terraform_variables/tf_network_vars_file.yml
  - ./terraform_variables/tf_k8node_vars_file.yml
  vars:
    istio_version: 1.13.2

  tasks:
  - name: Wait 300 seconds for ssh timeout, but only start checking after 1 seconds
    wait_for_connection:
      delay: 1
      timeout: 300

  - name: Download and Unarchive istio
    unarchive:
      src: https://github.com/istio/istio/releases/download/{{ istio_version }}/istio-{{ istio_version }}-linux-amd64.tar.gz
      dest: /opt
      remote_src: yes
      owner: root
      group: root
      mode: 0755

  - name: Create sym link for istioctl
    file:
      src: /opt/istio-{{ istio_version }}/bin/istioctl
      dest: /usr/local/bin/istioctl
      state: link
  
  - name: Copy istio_config.yaml
    template:
     src: istio_config.yaml
     dest: /tmp
     mode: 0755

  - name: Install istio
    become_user: fisherman
    command: istioctl install -f /tmp/istio_config.yaml -y

  - name: Delete istio_config.yaml
    file:
     path: /tmp/istio_config.yaml
     state: absent

  - name: Copy istio yamls dir to remote
    copy:
     src: ../k8s/istio
     dest: /tmp
     mode: 0755

  - name: Copy key to remote
    copy:
     src: ../sensitive_data/neverland.com.key
     dest: /tmp
     mode: 0755

  - name: Copy certificate to remote
    copy:
     src: ../sensitive_data/neverland.com.crt
     dest: /tmp
     mode: 0755

  - name: Create secret for gateway TLS
    become_user: fisherman
    command: kubectl create -n istio-system secret tls neverland-credential --key=/tmp/neverland.com.key --cert=/tmp/neverland.com.crt

  - name: Apply istio-system/istio-ingressgateway svc patch file
    become_user: fisherman
    command: kubectl -n istio-system patch svc istio-ingressgateway --patch-file /tmp/istio/patch/istio-ingressgateway_patch.yaml

  - name: Change auth method of kiali as token based  
    replace:
      path: /opt/istio-{{ istio_version }}/samples/addons/kiali.yaml
      regexp: 'anonymous'
      replace: token

  - name: Configure yaml for tolerations & nodeselector
    blockinfile:
      path: "{{ item.path }}"
      insertbefore: containers
      block: |2
              tolerations:
              - key: "node-role.kubernetes.io/infra"
                operator: "Exists"
                effect: "NoSchedule"
              affinity:
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - topologyKey: node-role.kubernetes.io/infra
                    labelSelector:
                      matchLabels:
                        app: "{{ item.appLabel }}"
                    namespaces:
                    - istio-system
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: node-role.kubernetes.io/infra
                        operator: In
                        values:
              {% for i in range(infrastructure_nodes|length) %}
                        - "{{ i+1 }}"
              {% endfor %}
    with_items:
    - {'appLabel': 'kiali', 'path': '/opt/istio-{{ istio_version }}/samples/addons/kiali.yaml'}
    - {'appLabel': 'grafana', 'path': '/opt/istio-{{ istio_version }}/samples/addons/grafana.yaml'}
    - {'appLabel': 'jaeger', 'path': '/opt/istio-{{ istio_version }}/samples/addons/jaeger.yaml'}
    - {'appLabel': 'prometheus', 'path': '/opt/istio-{{ istio_version }}/samples/addons/prometheus.yaml'}

  - name: Install Kiali dashboard
    become_user: fisherman
    command: kubectl apply -f /opt/istio-{{ istio_version }}/samples/addons

  - name: Apply new k8s resources
    become_user: fisherman
    command: kubectl apply -f /tmp/istio/new_resources

  - name: Delete istio yamls dir from remote
    file:
     path: /tmp/istio
     state: absent
  
  - name: Get kiali service account token
    become_user: fisherman
    shell:  kubectl -n istio-system get secrets $(kubectl -n istio-system get sa kiali -ojsonpath='{.secrets[0].name}') -ojsonpath='{.data.token}'|base64 -d
    register: kiali_sa_token

  - name: Copy kiali service account token to local file
    local_action: copy content="{{ kiali_sa_token.stdout_lines[0] }}" dest="../sensitive_data/kiali_sa_token" mode=0777

