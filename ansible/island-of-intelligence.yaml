- name: Island of intelligence initialization  
  hosts: islandOfIntelligence
  gather_facts: no
  become: yes
  become_method: sudo
  become_user: root
  vars_files:
  - ./terraform_variables/tf_island-of-intelligence_vars_file.yml
  - ./terraform_variables/tf_network_vars_file.yml
  - ./terraform_variables/tf_k8node_vars_file.yml
  tasks:
  - name: Wait 300 seconds for ssh timeout, but only start checking after 1 seconds
    wait_for_connection:
      delay: 1
      timeout: 300

  - name: install tinyproxy
    apt:
      name:
      - tinyproxy
      update_cache: true
      state: present

  - name: Ensure the tinyproxy  port is {{ tinyproxy_port }}
    lineinfile:
      path: /etc/tinyproxy/tinyproxy.conf
      regexp: '^Port 8888'
      line: Port {{ tinyproxy_port }}

  - name: Ensure the tinyproxy  listens {{ ioi_internal_ip }}
    lineinfile:
      path: /etc/tinyproxy/tinyproxy.conf
      regexp: '^#Listen 192.168.0.1'
      line: Listen {{ ioi_internal_ip }}

  - name: Allow {{ vpc_cidr }} to access http proxy
    lineinfile:
      path: /etc/tinyproxy/tinyproxy.conf
      regexp: '^Allow 127.0.0.1'
      line: Allow {{ vpc_cidr }}

  - name: add iptable entry for tinyproxy
    iptables:
      chain: INPUT
      protocol: tcp
      destination_port: "{{ tinyproxy_port }}"
      source: "{{ vpc_cidr }}"
      jump: ACCEPT
      comment: tinyproxy

  - name: enable and restart tinyproxy
    service:
      name: tinyproxy
      state: restarted
      enabled: yes
  
  - name: install nginx for reverse proxy
    apt:
      name:
      - nginx
      update_cache: true
      state: present
  
  - name: Disable default virtual host
    file:
      path: /etc/nginx/sites-enabled/default
      state: absent
   
  - name: Create nginx reverse configuration file
    file:
      path: /etc/nginx/sites-available/reverse-proxy.conf
      state: touch

  - name: Write nginx reverse configuration to file
    blockinfile:
      path: /etc/nginx/sites-available/reverse-proxy.conf
      block: |
             server {
               listen 80;
               location / {
                 access_log /var/log/nginx/reverse-access.log;
                 error_log /var/log/nginx/reverse-error.log;
                 proxy_http_version 1.1;
                 proxy_pass http://{{ nevertown_internal_ip }}:{{ istioingressgateway_port }};
               }
             }

  - name: Link nginx reverse configuration file
    file:
      src: /etc/nginx/sites-available/reverse-proxy.conf
      dest: /etc/nginx/sites-enabled/reverse-proxy.conf
      state: link

  - name: enable and restart nginx
    service:
      name: nginx
      state: restarted
      enabled: yes

