/* Network definitions */
resource "google_compute_network" "neverland-gcn" {
  name                    = "neverland-gcn"
  auto_create_subnetworks = false
}

resource "google_compute_subnetwork" "neverland-gcn-subnetwork" {
  name          = "neverland-gcn-subnetwork"
  ip_cidr_range = var.vpc_cidr
  region        = "europe-west6"
  network       = google_compute_network.neverland-gcn.id

  secondary_ip_range {
    range_name    = "vpc-pod-cidr"
    ip_cidr_range = var.vpc_pod_cidr
  }

  secondary_ip_range {
    range_name    = "vpc-svc-cidr"
    ip_cidr_range = var.vpc_svc_cidr
  }
}

/* Ansible variables */
resource "local_file" "tf_network_vars_file_new" {
  content  = <<-DOC
    # Ansible vars_file containing variable values from Terraform.
    # Generated by Terraform mgmt configuration.
    vpc_cidr: ${var.vpc_cidr}
    vpc_pod_cidr: ${var.vpc_pod_cidr}
    vpc_svc_cidr: ${var.vpc_svc_cidr}
    istioingressgateway_port: ${var.istioingressgateway_port}
    kubeapi_LBfrontend_IP: ${google_compute_forwarding_rule.kubeapi-forwarding-rule.ip_address}
    DOC
  filename = "../ansible/terraform_variables/tf_network_vars_file.yml"
}


/* Firewall defitions */
resource "google_compute_firewall" "allow-ssh" {
  name    = "allow-ssh"
  network = google_compute_network.neverland-gcn.id

  allow {
    protocol = "tcp"
    ports    = ["22"]
  }

  target_tags   = ["bastion", "ioi"]
  source_ranges = ["0.0.0.0/0"]
}

resource "google_compute_firewall" "internal-ssh" {
  name    = "internal-ssh"
  network = google_compute_network.neverland-gcn.id

  allow {
    protocol = "tcp"
    ports    = ["22"]
  }

  target_tags = ["internal"]
  source_tags = ["bastion"]
}

resource "google_compute_firewall" "allow-all-internal" {
  name    = "allow-all-internal"
  network = google_compute_network.neverland-gcn.id

  allow {
    protocol = "all"
  }

  target_tags = ["internal"]
  source_tags = ["internal"]
}

resource "google_compute_firewall" "allow-proxy" {
  name    = "allow-proxy"
  network = google_compute_network.neverland-gcn.id

  allow {
    protocol = "tcp"
    ports    = ["1234"]
  }

  target_tags = ["proxy"]
  source_tags = ["internal"]
}

resource "google_compute_firewall" "allow-bastion-to-k8s-api" {
  name    = "allow-bastion-to-k8s-api"
  network = google_compute_network.neverland-gcn.id

  allow {
    protocol = "tcp"
    ports    = ["6443"]
  }

  target_tags = ["k8s-master"]
  source_tags = ["bastion"]
}

resource "google_compute_firewall" "allow-reverse-proxy-to-istio-ingressgateway" {
  name    = "allow-reverse-proxy-to-istio-ingressgateway"
  network = google_compute_network.neverland-gcn.id

  allow {
    protocol = "tcp"
    ports    = [var.istioingressgateway_port]
  }

  target_tags = ["internal"]
  source_tags = ["proxy"]
}

resource "google_compute_firewall" "reverse-proxy-internet-access" {
  name    = "reverse-proxy-internet-access"
  network = google_compute_network.neverland-gcn.id

  allow {
    protocol = "tcp"
    ports    = ["80", "443"]
  }

  target_tags   = ["ioi"]
  source_ranges = ["0.0.0.0/0"]
}

